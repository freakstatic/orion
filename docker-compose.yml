version: '3'

services:
  orion_db:
    container_name: orion_db
    hostname: orion_db
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_DB: squid
      POSTGRES_PASSWORD: squid
    ports:
      - '${DB_PORT}:${DB_PORT}'
    command: ['postgres', '-c', 'config_file=/etc/postgresql/postgresql.conf', '-p', '${DB_PORT}']
    shm_size: 1g
    volumes:
      - orion_db_data:/var/lib/postgresql/data
      - ./db/postgres.conf:/etc/postgresql/postgresql.conf

  orion_processor:
    container_name: orion_processor
    hostname: orion_processor
    image: node:14
    restart: unless-stopped
    env_file:
      - .env
      - docker.env
    ports:
      - '127.0.0.1:${PROCESSOR_PROMETHEUS_PORT}:${PROCESSOR_PROMETHEUS_PORT}'
      - '[::1]:${PROCESSOR_PROMETHEUS_PORT}:${PROCESSOR_PROMETHEUS_PORT}'
    depends_on:
      - orion_db
    volumes:
      - type: bind
        source: .
        target: /orion
    working_dir: /orion
    command: ['make', 'process']

  orion_graphql-server:
    container_name: orion_graphql-server
    hostname: orion_graphql-server
    image: node:14
    restart: unless-stopped
    env_file:
      - .env
      - docker.env
    environment:
      - SQD_TRACE=authentication
    depends_on:
      - orion_db
    volumes:
      - type: bind
        source: .
        target: /orion
    working_dir: /orion
    command: ['make', 'serve']
    ports:
      - '4350:4350'

  orion_auth-api:
    container_name: orion_auth-api
    hostname: orion_auth-api
    image: node:14
    restart: unless-stopped
    env_file:
      - .env
      - docker.env
    environment:
      - SQD_TRACE=authentication
    depends_on:
      - orion_db
    volumes:
      - type: bind
        source: .
        target: /orion
    working_dir: /orion
    command: ['make', 'serve-auth-api']
    ports:
      - '${AUTH_API_PORT}:${AUTH_API_PORT}'

  # Ref: https://www.elastic.co/guide/en/elasticsearch/reference/8.7/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-password}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:9200:9200

  # Ref: https://www.elastic.co/guide/en/kibana/8.7/docker.html
  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    container_name: kibana
    ports:
      - 127.0.0.1:5601:5601
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_SERVICEACCOUNTTOKEN: ${ELASTICSEARCH_SERVICEACCOUNTTOKEN}
      # Ref: https://www.elastic.co/guide/en/kibana/current/xpack-security-secure-saved-objects.html#xpack-security-secure-saved-objects
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: ${XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_SERVICEACCOUNTTOKEN: ${ELASTICSEARCH_SERVICEACCOUNTTOKEN}
    volumes:
      - ./db/filebeat.yml:/usr/share/filebeat/filebeat.yml  # Mount Filebeat configuration
    depends_on:
      - elasticsearch  # Ensure that Elasticsearch is started before Filebeat
      - orion_db # should add dependency

volumes:
  es-data:
    driver: local
  cache:
    driver: local
  data:
    driver: local
  orion_db_data:
    driver: local

networks:
  default:
    external:
      name: joystream_default
